<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.springcool</groupId>
    <artifactId>springcool</artifactId>
    <packaging>pom</packaging>
    <version>${revision}</version>
    <description>Spring Cloud Alibaba 最佳实践</description>

    <properties>
        <revision>2.2.1</revision>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-boot.version>2.6.7</spring-boot.version>
        <spring-cloud.version>2021.0.1</spring-cloud.version>
        <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
        <alibaba.nacos.version>2.0.4</alibaba.nacos.version>
        <spring-boot-admin.version>2.6.7</spring-boot-admin.version>
        <spring-boot.mybatis-plus>3.5.1</spring-boot.mybatis-plus>
        <netty.version>4.1.67.Final</netty.version>
        <swagger.fox.version>3.0.0</swagger.fox.version>
        <swagger.core.version>1.6.2</swagger.core.version>
        <tobato.version>1.27.2</tobato.version>
        <kaptcha.version>2.3.2</kaptcha.version>
        <pagehelper.version>5.3.0</pagehelper.version>
        <druid.version>1.2.8</druid.version>
        <dynamic-ds.version>3.5.1</dynamic-ds.version>
        <commons.io.version>2.11.0</commons.io.version>
        <commons.fileupload.version>1.4</commons.fileupload.version>
        <velocity.version>2.3</velocity.version>
        <fastjson.version>1.2.83</fastjson.version>
        <minio.version>8.2.2</minio.version>
        <poi.version>4.1.2</poi.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <hutool-all.version>5.7.16</hutool-all.version>
        <jjwt.version>0.9.1</jjwt.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <transmittable-thread-local.version>2.12.2</transmittable-thread-local.version>
        <maven.compiler.version>3.8.1</maven.compiler.version>
        <maven.flatten.version>1.2.1</maven.flatten.version>
    </properties>

    <!-- 依赖声明 -->
    <dependencyManagement>
        <dependencies>

            <!-- SpringCloud 微服务 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- SpringCloud Alibaba 微服务 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Alibaba Nacos 配置 -->
            <dependency>
                <groupId>com.alibaba.nacos</groupId>
                <artifactId>nacos-client</artifactId>
                <version>${alibaba.nacos.version}</version>
            </dependency>

            <!-- SpringBoot 依赖配置 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--  SpringBoot 监控客户端 -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${spring-boot-admin.version}</version>
            </dependency>

            <!-- FastDFS 分布式文件系统 -->
            <dependency>
                <groupId>com.github.tobato</groupId>
                <artifactId>fastdfs-client</artifactId>
                <version>${tobato.version}</version>
            </dependency>

            <!-- Mybatis-Plus 依赖配置 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${spring-boot.mybatis-plus}</version>
            </dependency>

            <!-- pageHelper 分页插件 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>

            <!-- mapstruct 转换器 -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- Swagger 依赖配置 -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>

            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger.core.version}</version>
            </dependency>

            <!-- 验证码 -->
            <dependency>
                <groupId>com.github.penggle</groupId>
                <artifactId>kaptcha</artifactId>
                <version>${kaptcha.version}</version>
            </dependency>

            <!-- io常用工具类 -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>

            <!-- excel工具 -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- 文件上传工具类 -->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons.fileupload.version}</version>
            </dependency>

            <!-- 代码生成使用模板 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <!-- Collection 增强Java集合框架 -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>

            <!-- JSON 解析器和生成器 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <!-- JWT -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>

            <!-- 线程传递值 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${transmittable-thread-local.version}</version>
            </dependency>

            <!-- 核心模块 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-core</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 通信模块 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-web</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 接口模块 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-swagger</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 安全模块 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-security</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 权限范围 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-datascope</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 多数据源 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-datasource</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 日志记录 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-log</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 缓存服务 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-common-redis</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 系统接口 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-system-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 租管接口 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-tenant-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 文件管理接口 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-file-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 定时任务接口 -->
            <dependency>
                <groupId>com.springcool</groupId>
                <artifactId>cool-job-api</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- huTool 工具类库-->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool-all.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <modules>
        <module>cool-auth</module>
        <module>cool-gateway</module>
        <module>cool-visual</module>
        <module>cool-service</module>
        <module>cool-service-api</module>
        <module>cool-common</module>
    </modules>

    <dependencies>

        <!-- bootstrap 启动器 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bootstrap</artifactId>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.mapstruct</groupId>
                                <artifactId>mapstruct-processor</artifactId>
                                <version>${mapstruct.version}</version>
                            </path>
                        </annotationProcessorPaths>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <!--解析revision 打包插件-->
                <plugin>
                    <!--
                    这个插件的作用是，生成一个压缩版的pom.xml文件，然后在install和deploy阶段使用压缩后的pom.xml文件，替换原来的pom.xml文件，具体压缩策略如下：

                    和构建有关的元素会被删除；
                    和开发有关的元素默认会被删除；
                    只包含构件的使用者必须的一些信息；
                    变量会被解析；
                    上级关系会被解析，然后被压缩删除；
                    构建时实际使用的profile会被评估，视情况处理；
                    由JDK或者OS驱动的profile会被保留，需要时可以动态地控制依赖。
                    -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${maven.flatten.version}</version>
                    <configuration>
                        <!--
                        embedBuildProfileDependencies	Boolean	由OS或者JDK的不同而触发的profile，可能根据环境的不同而产生不同的依赖，但是由属性等触发的profile，就不确定了，如果属性设置为true，profile中的依赖会直接写入生成的pom中，如果设置为false，所有的profile信息都会保留,默认是false。
                        flattenedPomFilename	String	生成的压缩后的pom.xml文件的文件名，默认为.flattened-pom.xml。
                        outputDirectory	File	生成的压缩后的pom.xml文件的存放位置，默认为${project.basedir}。
                        pomElements	FlattenDescriptor	该元素定义了如何处理额外的元素，如果可能，尽量使用flattenMode，这个元素仅仅用于进一步提高灵活性，它可以控制具体的某个元素是保留还是删除，比如要指定删除repositories，可以这样：<pomElements><repositories>flatten</repositories></pomElements>。
                        updatePomFile	Boolean	插件默认只会处理packaging属性为非pom的，如果要处理packaging为pom的，可将本属性值设置为true。
                        flattenMode	FlattenMode	插件预定义了若干种压缩模式，下面会详述。
                            minimum	不推荐使用，会展开pluginRepositories。
                            bom	会保留dependencyManagement，展开properties。
                            oss	推荐开源项目使用，会展开ciManagement、contributors、distributionManagement、inceptionYear、issueManagement、mailingLists、organization、prerequisites
                            ossrh	会展开name、description、url、scm、developers
                            defaults	会展开repositories
                            clean	删除全部可选元素
                        -->
                        <flattenedPomFilename>flattened-pom.xml</flattenedPomFilename>
                        <updatePomFile>true</updatePomFile>
                        <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>flatten</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>flatten</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>flatten.clean</id>
                            <phase>clean</phase>
                            <goals>
                                <goal>clean</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
